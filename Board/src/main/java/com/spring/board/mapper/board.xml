<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="board">

	<insert id="test_insert">
		insert into spring_test(no, name, writeday)
		values(101, '김민성', default)
	</insert>
	
	<select id="test_select" resultType="com.spring.board.model.TestVO" >
		select no, name, to_char(writeday, 'yyyy-mm-dd hh24:mi:ss') as writeday
		from spring_test
		order by writeday asc
	</select>
	
	<!-- #### 중요 #### 
       HashMap 타입으로 매개변수를 받아온 것을 꺼내서 사용할때 
       1. 데이터로 사용할때는 #{key명} 이고,
       2. 식별자(테이블명, 컬럼명)로 사용할때는 ${key명} 이고,
       3. myBatis 에서 제공하는 if 엘리먼트나 choose 엘리먼트 안에서 사용할때는 
             그냥 <if test="key명"> <when test="key명"> 으로 사용한다. 
   -->
	<insert id="test_insert_map" parameterType="HashMap">
		insert into spring_test(no, name, writeday)
		values(#{no}, #{name}, default)
	</insert>
	
	
	<insert id="test_insert_vo" parameterType="com.spring.board.model.TestVO">
		insert into spring_test(no, name, writeday)
		values(#{no}, #{name}, default)
	</insert>
	
	<!-- ================================================================ -->
	<!-- #39. 메인페이지용 이미지 파일을 가져오기 -->
	<select id="getImagefilenameList" resultType="String">
		select imgfilename
		from tbl_main_image
		order by imgno asc
	</select>
	
	<!-- === #47. 로그인 처리하기 === -->
	<select id="getLoginMember" resultType="com.spring.board.model.MemberVO" parameterType="HashMap">
		select userid, name, email, mobile, postcode, address, detailaddress, extraaddress, gender
	     , birthyyyy, birthmm, birthdd, coin, point, registerday, pwdchangegap
	     ,nvl( lastlogingap, trunc( months_between(sysdate, registerday) )) as lastlogingap
		from
		(
		select userid, name, email, mobile, postcode, address, detailaddress, extraaddress, gender
		     , substr(birthday,1,4) as birthyyyy, substr(birthday,6,2) as birthmm, substr(birthday,9) as birthdd
		     , coin, point, to_char(registerday,'yyyy-mm-dd') as registerday
		     , trunc( months_between(sysdate, lastpwdchangeddate) ) as pwdchangegap
		from tbl_member
		where status = 1 and userid = #{userid} and pwd = #{pwd}  
		) M 
		cross join 
		(
		select trunc( months_between(sysdate, max(logindate)) ) as lastlogingap 
		from tbl_loginhistory 
		where fk_userid = #{userid}
		) H
	</select>
	<update id="updateIdle" parameterType="String">
		update tbl_member set idle = 1
		where userid = #{userid}
	</update>
	
	<insert id="add" parameterType="com.spring.board.model.BoardVO">       
       insert into tbl_board(seq, fk_userid, name, subject, content, pw, readCount, regDate, status)
       values(boardSeq.nextval, #{fk_userid}, #{name}, #{subject}, #{content}, #{pw}, default, default, default) 
	</insert>
	
	<!-- <select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject  
            , readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
       from tbl_board
       where status = 1
       order by seq desc
	</select> -->
	<!--  -->
	<!-- #95 전체 글 목록 보여주기 + 딸린 댓글의 갯수 -->
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject  
            , readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
            , commentCount
       from tbl_board
       where status = 1
       order by seq desc
	</select>
	
	<update id="setAddReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1
		where seq = #{seq}
	</update>
	
<!--  == #67. (댓글쓰기가 없는 게시판에서) 글 1개 보여주기  ==  -->
   <select id="board.getVIew" parameterType="String" resultType="com.spring.board.model.BoardVO">
      select previousseq, previoussubject
           , seq, fk_userid, name, subject, content, readCount, regDate
           , nextseq, nextsubject
      from 
      (
          select  lag(seq,1) over(order by seq desc) AS previousseq 
                , lag(subject,1) over(order by seq desc) AS previoussubject
                  
                 , seq, fk_userid, name, subject, content, readCount
                 , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
          
                 , lead(seq,1) over(order by seq desc) AS nextseq 
                 , lead(subject,1) over(order by seq desc) AS nextsubject
          from tbl_board
          where status = 1
      ) V 
      where V.seq = #{seq}      
   </select>
   
<!-- #74 1개글 수정 -->
	<update id="board.edit" parameterType="com.spring.board.model.BoardVO">
		update tbl_board set subject = #{subject}
							, content = #{content}
		where seq = #{seq} and pw = #{pw}
	</update> 
	
<!-- #75 1개글 삭제 -->
	<update id="board.del" parameterType="com.spring.board.model.BoardVO">
		delete from tbl_board
		where seq = #{seq} and pw = #{pw}
	</update> 
	
<!--  === #88. 댓글쓰기(tbl_comment 테이블에 insert) === -->
    <insert id="board.addComment" parameterType="com.spring.board.model.CommentVO">
       insert into tbl_comment(seq, fk_userid, name, content, regDate, parentSeq, status)
        values(commentSeq.nextval, #{fk_userid}, #{name}, #{content}, default, #{parentSeq}, default)
    </insert>
    
<!--  === #89. tbl_board 테이블에 commentCount 컬럼의 값을 1증가(update) === -->  
   <update id="board.updateCommentCount" parameterType="String">
       update tbl_board set commentCount = commentCount + 1 
       where seq = #{parentSeq}
    </update>
	
<!--  === #89.1 tbl_board 테이블에 point update  === -->  
   <update id="board.updateMemberPoint" parameterType="HashMap">
       	update tbl_member set point = point + to_number(#{point})
		where userid = #{userid}
    </update>
    
<!-- === #92. 원게시글에 딸린 댓글들을 조회해오는 것 -->
	<select id="board.getCommentList" parameterType="String" resultType="com.spring.board.model.CommentVO">
		select name, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		from tbl_comment
		where status = 1 and parentSeq = #{parentSeq}
		order by seq desc
	</select>
	
	<update id="board.pointPlus" parameterType="HashMap">
		update tbl_member set point = point + to_number(#{point})
		where userid = #{fk_userid}
	</update>
	
<!-- === #105. 페이징처리 안한 검색어가 있는 전체 글 목록 보여주기 === -->
	<select id="board.boardListSearch" parameterType="HashMap" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject  
		  , readcount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		  , commentCount
		from tbl_board
		where status = 1
		<if test='searchWord != ""'>
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>
		order by seq desc
	</select>	

<!-- === #111. 검색어 입력시 자동글 완성하기 6 === -->
	<select id="board.wordSearchShow" parameterType="HashMap" resultType="String">
		select ${searchType}
		from tbl_board
		where status = 1 and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		order by seq desc
	</select>

</mapper>






	